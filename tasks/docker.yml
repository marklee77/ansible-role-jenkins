---
- name: ensure docker image build directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb"
    archive: no
    checksum: yes
    recursive: yes

- name: ensure docker image configuration directory exists
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb/provisioning/group_vars"

- name: update configuration used to build docker image from template
  template:
    src: ansible_cache/dockerbuild/mariadb/provisioning/group_vars/all.yml
    owner: "{{ ansible_ssh_user }}"
    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb/provisioning/group_vars/all.yml"

- name: ensure mariadb docker image has been built
  docker_image:
    name: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    path: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb"
    state: present

- name: ensure mariadb data container exists
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_data"
    command: /bin/true
    detach: no
    state: present

- name: ensure mariadb service is running
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_server"
    volumes_from: "{{ mariadb_docker_containername }}_data"
    ports: "{{ mariadb_bind_address }}:{{ mariadb_port }}:3306"
    detach: yes
    env: mysql_root_password={{ mariadb_mysql_root_password }},docker_host={{ ansible_docker0["ipv4"]["address"] }}
    state: running
  register: server_startup

- name: block until the service configuration has been completed
  mysql_user:
    login_host: "{{ mariadb_bind_address }}"
    login_port: "{{ mariadb_port }}"
    login_user: root
    login_password: "{{ mariadb_mysql_root_password }}"
    name: root
    password: "{{ mariadb_mysql_root_password }}"
    host: localhost
    state: present
  register: server_connect
  ignore_errors: yes
  until: server_connect|success
  retries: 5
  delay: 1

- name: collect server startup log
  command: docker logs "{{ mariadb_docker_containername }}_server"
  register: startup_log
  changed_when: false

- name: display server startup log
  debug:
    msg: "{{ startup_log.stdout_lines }}"

