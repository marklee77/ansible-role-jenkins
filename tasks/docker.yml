---
- name: ensure docker image build directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild"
  when: jenkins_docker_build_image

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/jenkins"
    archive: no
    checksum: yes
    recursive: yes
  when: jenkins_docker_build_image

- name: ensure docker image configuration directory exists
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/jenkins/provisioning/group_vars"
  when: jenkins_docker_build_image

- name: update configuration used to build docker image from template
  template:
    src: ansible_cache/dockerbuild/jenkins/provisioning/group_vars/all.yml
    owner: "{{ ansible_ssh_user }}"
    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/jenkins/provisioning/group_vars/all.yml"
  when: jenkins_docker_build_image

- name: ensure jenkins docker image has been built
  docker_image:
    name: "{{ jenkins_docker_username }}/{{ jenkins_docker_imagename }}"
    path: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/jenkins"
    state: present
  when: jenkins_docker_build_image

- name: ensure jenkins data container exists
  docker:
    image: "{{ jenkins_docker_username }}/{{ jenkins_docker_imagename }}"
    name: "{{ jenkins_docker_containername }}_data"
    command: /bin/true
    detach: no
    state: present

- name: ensure jenkins service is running
  docker:
    image: "{{ jenkins_docker_username }}/{{ jenkins_docker_imagename }}"
    name: "{{ jenkins_docker_containername }}_server"
    volumes_from: "{{ jenkins_docker_containername }}_data"
    ports: "{{ jenkins_bind_address }}:{{ jenkins_port }}:80"
    detach: yes
    env: 
      - mysql_root_password={{ jenkins_mysql_root_password }}
    state: running
  register: server_startup

- name: block until the service configuration has been completed
  mysql_user:
    login_host: "{{ jenkins_bind_address }}"
    login_port: "{{ jenkins_port }}"
    login_user: root
    login_password: "{{ jenkins_mysql_root_password }}"
    name: root
    password: "{{ jenkins_mysql_root_password }}"
    host: localhost
    state: present
  register: server_connect
  until: server_connect|success
  retries: 30
  delay: 1
