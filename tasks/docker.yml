---
- name: ensure dockerfile directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0700
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/docker"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/mariadb"
    links: yes
    delete: yes

- name: ensure mariadb docker image has been built
  docker_image:
    name: "{{ mariadb_docker_username }}/mariadb"
    path: "{{ ansible_env.PWD }}/.ansible_cache/docker/mariadb"
    state: present

- name: ensure mariadb data container exists
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_data"
    command: >
      ansible-playbook 
        -i inventories/local.ini playbooks/offline_configuration.yml -e '{
          "mariadb_bind_address" : "0.0.0.0", 
          "mariadb_port" : 3306 }'
    detach: no
    state: present

- name: wait until offline configuration is completed
  command: docker wait "{{ mariadb_docker_containername }}_data"
  register: docker_wait
  changed_when: false
  failed_when: docker_wait.stdout != "0"

- name: ensure mariadb service is running
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_server"
    volumes_from: "{{ mariadb_docker_containername }}_data"
    ports: "{{ mariadb_bind_address }}:{{ mariadb_port }}:3306"
    detach: yes
    state: running

- name: perform mariadb docker online configuration
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_configure"
    volumes_from: "{{ mariadb_docker_containername }}_data"
    detach: no
    command: >
      ansible-playbook 
        -i inventories/local.ini playbooks/online_configuration.yml -e '{ 
          "mariadb_docker_host" : "{{ ansible_docker0['ipv4']['address'] }}", 
          "mariadb_mysql_root_password" : "{{ mariadb_mysql_root_password }}" }'
    state: present

- name: wait until online configuration is completed
  command: docker wait "{{ mariadb_docker_containername }}_configure"
  register: docker_wait
  changed_when: false
  failed_when: docker_wait.stdout != "0"

